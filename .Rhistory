library(rsm)
library(rsm)
CR <- coded.data (ChemReact, x1~(Time-85)/5, x2~(Temp-175)/5)
CR
CR.rs2 <- rsm (Yield ~ Block + SO(x1,x2), data=CR)
summary(CR.rs2)
RRex <- ccd(Response~A+B, n0=c(0,3), alpha="face", randomize=FALSE, oneblock=TRUE)
RRex
RRex$Response <- c(52.3, 5.3, 46.7, 44.2, 58.5, 33.5, 32.8, 49.2, 49.3, 50.2, 51.6)
RRex.rsm <- rsm(Response ~ SO(A,B), data = RRex)
canonical(RRex.rsm)
RRex
RRex$Response
RRex.rsm <- rsm(Response ~ SO(A,B), data = RRex)
RRex.rsm$modde
RRex.rsm$model
RRex.rsm$coding
canonical(RRex.rsm)
steepest(RRex.rsm)
steepest = function (object, dist=seq(0,5,by=.5), descent=FALSE) {
goal = ifelse(descent, "descent", "ascent")
dist = abs (dist)
if (is.null(object$B)) {
d = object$b / sqrt (sum (object$b^2))
if (descent) d = -d
path = t(sapply(dist, function(x) d*x))
cat(paste("Linear path of steepest", goal, "\n"))
}
else {
iden = diag (rep (1, length(object$b)))
rng = range (eigen (object$B) $values)
soln = function (gam) {
-0.5 * solve (object$B - gam*iden, object$b)
}
deldist = function (gam, d) {
xx = soln (gam)
sqrt (sum (xx^2)) - d
}
find.pt = function(d, bd) {
if (abs(d) < .01) return (0 * object$b)
gamma = uniroot (deldist, bd, d)$root
soln (gamma)
}
incr.out = function(bd, inc, mind) {
while (deldist(bd, mind) > 0) {
bd = bd + inc
inc = 2*inc
}
bd
}
mind = min(dist[dist>.009])
if (descent)
bds = c(incr.out(rng[1]-5, -2, mind), rng[1]-.001)
else
bds = c(rng[2]+.001, incr.out(rng[2]+5, 2, mind))
path = t(sapply(dist, find.pt, bds))
cat(paste("Path of steepest", goal, "from ridge analysis:\n"))
}
path = newdata = as.data.frame (round (path, 3))
md = model.data(object)
for (vn in names(md))
if (is.null(newdata[[vn]])) {
v = md[[vn]]
if(is.factor(v))
newdata[[vn]] = factor(levels(v)[1], levels=levels(v))
else newdata[[vn]] = mean(v)
}
yhat = predict(object, newdata=newdata)
path[["|"]] = factor("|")
if (!is.null(object$coding)) {
orig = code2val(path, object$coding)
path = cbind(path, orig)
}
ans = cbind(data.frame(dist=dist), path, yhat=round(yhat,3))
ans
}
steepest(RRex.rsm)
object <- RRex.rsm
dist=seq(0,5,by=.5)
descent=FALSE
dist = abs (dist)
iden = diag (rep (1, length(object$b)))
iden
rng = range (eigen (object$B) $values)
rng
soln = function (gam) {
-0.5 * solve (object$B - gam*iden, object$b)
}
deldist = function (gam, d) {
xx = soln (gam)
sqrt (sum (xx^2)) - d
}
find.pt = function(d, bd) {
if (abs(d) < .01) return (0 * object$b)
gamma = uniroot (deldist, bd, d)$root
soln (gamma)
}
incr.out = function(bd, inc, mind) {
while (deldist(bd, mind) > 0) {
bd = bd + inc
inc = 2*inc
}
bd
}
mind = min(dist[dist>.009])
mind
bds = c(rng[2]+.001, incr.out(rng[2]+5, 2, mind))
bds
path = t(sapply(dist, find.pt, bds))
path
dist
bds
object$b
object$B
object
steepest(RRex.rsm)
